<%#

  Table of Contents

-%>
<ac:structured-macro ac:name="toc">
  <ac:parameter ac:name="maxLevel">2</ac:parameter>
  <ac:parameter ac:name="minLevel">1</ac:parameter>
  <ac:parameter ac:name="outline">false</ac:parameter>
  <ac:parameter ac:name="style">disc</ac:parameter>
  <ac:parameter ac:name="type">list</ac:parameter>
  <ac:parameter ac:name="class">rm-contents</ac:parameter>
  <ac:parameter ac:name="printable">true</ac:parameter>
</ac:structured-macro>
<%#

  Parse classes

-%>
<%- if @data['puppet_classes'].any? -%>
  <h1>Classes</h1>
  <%- @data['puppet_classes'].each do |puppet_class| -%>
    <h2><%= puppet_class['name'] %></h2>
    <%- if puppet_class['docstring']['tags'] -%>
      <p><%= h(puppet_class['docstring']['text']).gsub("\n\n", "<br/>\n") %></p>
      <%- api = puppet_class['docstring']['tags'].select { |a| a['tag_name'].eql? 'api' } -%>
      <%- if api.any? and api[0]['text'].eql? 'private' -%>
        <ac:structured-macro ac:name="note" ac:schema-version="1">
          <ac:rich-text-body>
            <p>This class is private. It's intended solely for internal module usage.</p>
          </ac:rich-text-body>
        </ac:structured-macro>
      <%- end -%>
      <%- for tag in puppet_class['docstring']['tags'] -%>
        <%- unless %w(param example api).include? tag['tag_name'] -%>
          <h3><%= tag['tag_name'].capitalize %></h3>
          <p><%= h tag['name'] %> <%= h tag['text'] %></p>
        <%- end -%>
      <%- end -%>
      <%- params = puppet_class['docstring']['tags'].select { |a| a['tag_name'].eql? 'param' } -%>
      <%- if params.any? -%>
        <h3>Parameters</h3>
        <ul>
          <%- for param in params -%>
            <li><strong><%= param['name'] %></strong> [ <%= param['types'].join(',') %> ] <%= param['text'] %></li>
          <%- end -%>
        </ul>
      <%- end -%>
      <%- examples = puppet_class['docstring']['tags'].select { |a| a['tag_name'].eql? 'example' } -%>
      <%- if examples.any? -%>
        <%- examples.each do |example| -%>
          <h3>Examples</h3>
          <%= Strings2conf::Util::code_block(example['text'], title: example['name'], language: :ruby) -%>
        <%- end -%>
      <%- end -%>
      <%= Strings2conf::Util::code_block(puppet_class['source'], title: puppet_class['file'], collapse: true, language: :ruby) -%>
    <%- end -%>
  <%- end -%>
<%- end -%>
<%#

  Parse defined types

-%>
<%- if @data['defined_types'].any? -%>
  <h1>Defined Types</h1>
  <%- @data['defined_types'].each do |defined_type| -%>
    <h2><%= defined_type['name'] %></h2>
    <%- if defined_type['docstring']['tags'] -%>
      <p><%= h(defined_type['docstring']['text']).gsub("\n\n", "<br/>\n") %></p>
      <%- api = defined_type['docstring']['tags'].select { |a| a['tag_name'].eql? 'api' } -%>
      <%- if api.any? and api[0]['text'].eql? 'private' -%>
        <ac:structured-macro ac:name="note" ac:schema-version="1">
          <ac:rich-text-body>
            <p>This defined type is private. It's intended solely for internal module usage.</p>
          </ac:rich-text-body>
        </ac:structured-macro>
      <%- end -%>
      <%- for tag in defined_type['docstring']['tags'] -%>
        <%- unless %w(param example api).include? tag['tag_name'] -%>
          <h3><%= tag['tag_name'].capitalize %></h3>
          <p><%= h tag['name'] %> <%= h tag['text'] %></p>
        <%- end -%>
      <%- end -%>
      <%- params = defined_type['docstring']['tags'].select { |a| a['tag_name'].eql? 'param' } -%>
      <%- if params.any? -%>
        <h3>Parameters</h3>
        <ul>
          <%- for param in params -%>
            <li><strong><%= param['name'] %></strong> [ <%= param['types'].join(',') %> ] <%= param['text'] %></li>
          <%- end -%>
        </ul>
      <%- end -%>
      <%- examples = defined_type['docstring']['tags'].select { |a| a['tag_name'].eql? 'example' } -%>
      <%- if examples.any? -%>
        <h3>Examples</h3>
        <%- examples.each do |example| -%>
          <%= Strings2conf::Util::code_block(example['text'], title: example['name'], language: :ruby) -%>
        <%- end -%>
      <%- end -%>
      <%= Strings2conf::Util::code_block(defined_type['source'], title: defined_type['file'], collapse: true, language: :ruby) -%>
    <%- end -%>
  <%- end -%>
<%- end -%>
<%#

  Parse functions

-%>
<%- if @data['puppet_functions'].any? -%>
  <h1>Functions</h1>
  <%- @data['puppet_functions'].each do |puppet_function| -%>
    <h2><%= puppet_function['name'] %></h2>
    <p><%= h(puppet_function['docstring']['text']).gsub("\n\n", "<br/>\n") %></p>
    <%-
      tags = puppet_function['docstring']['tags']
      examples = tags.select { |a| a['tag_name'].eql? 'example' }
      overloads = tags.select { |a| a['tag_name'].eql? 'overload' }
    -%>
    <%- if overloads.any? -%>
      <%- overloads.each_with_index do |overload, index| -%>
        <h3>Signature #<%= index + 1 %></h3>
        <%= Strings2conf::Util::code_block(overload['signature'], language: :ruby, theme: 'Default', linenumbers: false) -%>
        <%- tags = overload['docstring']['tags'] -%>
        <%- params = tags.select { |a| a['tag_name'].eql? 'param' } -%>
        <%- returns = tags.select { |a| a['tag_name'].eql? 'return' } -%>
        <%- if params.any? -%>
          <h3>Parameters</h3>
          <%- params.each do |param| -%>
            <strong><%= param['name'] %></strong> [ <%= param['types'].join(',') %> ] <%= param['text'] %><br/>
          <%- end -%>
        <%- end -%>
        <%- if returns.any? -%>
          <h3>Returns</h3>
          <%- returns.each do |ret| -%>
            <p>[ <%= ret['types'].join(',') %> ] <%= ret['text'] %></p>
          <%- end -%>
        <%- end -%>
      <%- end -%>
    <%- else -%>
      <%- params = tags.select { |a| a['tag_name'].eql? 'param' } -%>
      <%- returns = tags.select { |a| a['tag_name'].eql? 'return' } -%>
      <%- if params.any? -%>
        <h3>Parameters</h3>
        <%- params.each do |param| -%>
          <strong><%= param['name'] %></strong> [ <%= param['types'].join(',') %> ] <%= param['text'] %><br/>
        <%- end -%>
      <%- end -%>
      <%- if returns.any? -%>
        <h3>Returns</h3>
        <%- returns.each do |ret| -%>
          <p>[ <%= ret['types'].join(',') %> ] <%= ret['text'] %></p>
        <%- end -%>
      <%- end -%>
    <%- end -%>
    <%- if examples.any? -%>
      <h3>Examples</h3>
      <%- examples.each do |example| -%>
        <%= Strings2conf::Util::code_block(example['text'], title: example['name'], language: :ruby) -%>
      <%- end -%>
    <%- end -%>
    <%= Strings2conf::Util::code_block(puppet_function['source'], title: puppet_function['file'], collapse: true, language: :ruby) -%>
  <%- end -%>
<%- end -%>
